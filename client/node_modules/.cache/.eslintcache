[{"/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/index.js":"1","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/App.js":"2","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/styles/GlobalStyles.js":"3","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/store/index.js":"4","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/components/Header/index.js":"5","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/pages/MainPage/index.js":"6","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/pages/UserLogin/index.js":"7","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/pages/UserRegister/index.js":"8","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/pages/ProductRegister/index.js":"9","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/pages/DetailsPage/index.js":"10","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/pages/CartPage/index.js":"11","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/styles/Icons.js":"12","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/components/Header/styles.js":"13","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/pages/UserLogin/styles.js":"14","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/pages/UserRegister/styles.js":"15","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/pages/MainPage/styles.js":"16","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/pages/ProductRegister/styles.js":"17","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/pages/DetailsPage/styles.js":"18","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/pages/CartPage/styles.js":"19","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/components/ProductCard/index.js":"20","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/components/ProductCard/styles.js":"21"},{"size":197,"mtime":1666807816109,"results":"22","hashOfConfig":"23"},{"size":1165,"mtime":1666807816109,"results":"24","hashOfConfig":"23"},{"size":692,"mtime":1666841744089,"results":"25","hashOfConfig":"23"},{"size":606,"mtime":1666807816113,"results":"26","hashOfConfig":"23"},{"size":5559,"mtime":1666840849698,"results":"27","hashOfConfig":"23"},{"size":1756,"mtime":1666807816109,"results":"28","hashOfConfig":"23"},{"size":1933,"mtime":1666877640076,"results":"29","hashOfConfig":"23"},{"size":3652,"mtime":1666807816113,"results":"30","hashOfConfig":"23"},{"size":8248,"mtime":1666807816113,"results":"31","hashOfConfig":"23"},{"size":9469,"mtime":1666807816109,"results":"32","hashOfConfig":"23"},{"size":6166,"mtime":1666807816109,"results":"33","hashOfConfig":"23"},{"size":249,"mtime":1666838535031,"results":"34","hashOfConfig":"23"},{"size":5013,"mtime":1666841930993,"results":"35","hashOfConfig":"23"},{"size":1291,"mtime":1666877946036,"results":"36","hashOfConfig":"23"},{"size":2287,"mtime":1666877816958,"results":"37","hashOfConfig":"23"},{"size":336,"mtime":1666879907318,"results":"38","hashOfConfig":"23"},{"size":5029,"mtime":1666840512914,"results":"39","hashOfConfig":"23"},{"size":4014,"mtime":1666880190173,"results":"40","hashOfConfig":"23"},{"size":2053,"mtime":1666880075816,"results":"41","hashOfConfig":"23"},{"size":710,"mtime":1666878318108,"results":"42","hashOfConfig":"23"},{"size":1165,"mtime":1666879501381,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1ihyedl",{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/index.js",[],["96","97"],"/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/App.js",["98","99"],"import React, { useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { Provider, useDispatch } from \"react-redux\";\nimport store from \"./store\";\nimport GlobalStyles from \"./styles/GlobalStyles\";\nimport Header from \"./components/Header\";\nimport MainPage from \"./pages/MainPage\";\nimport UserLogin from \"./pages/UserLogin\";\nimport UserRegister from \"./pages/UserRegister\";\nimport DetailsPage from \"./pages/DetailsPage\";\nimport CartPage from \"./pages/CartPage\";\nimport ProductRegister from \"./pages/ProductRegister\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Header />\n        <Routes>\n          <Route path=\"/\" element={<MainPage />} />\n          <Route path=\"/login\" element={<UserLogin />} />\n          <Route path=\"/register\" element={<UserRegister />} />\n          <Route exact path=\"/product/:productId\" element={<DetailsPage />} />\n          <Route path=\"/cart\" element={<CartPage />} />\n          <Route path=\"/product/register\" element={<ProductRegister />} />\n        </Routes>\n      </BrowserRouter>\n      <GlobalStyles />\n    </Provider>\n  );\n}\n\nexport default App;\n","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/styles/GlobalStyles.js",[],"/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/store/index.js",[],"/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/components/Header/index.js",["100","101","102","103","104","105","106","107","108","109","110","111","112","113"],"import React, { useEffect, useState, useRef } from \"react\";\nimport {\n  RiTruckLine,\n  RiArrowDropDownLine,\n  HiOutlineShoppingBag,\n} from \"../../styles/Icons\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport cep from \"cep-promise\";\nimport {\n  Container,\n  LocationInfo,\n  SearchWrapper,\n  ProfilePicture,\n  UserProfile,\n  DropDownMenu,\n  DropDownItem,\n  SearchIcon,\n  DropDownContainer,\n  SearchBar,\n  Row,\n  UserInfo,\n  MenuWrapper,\n  Menu,\n  LocationDropDownContainer,\n  LocationDropDown,\n} from \"./styles\";\nfunction Header() {\n  const [logged, setLogged] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [locationOpen, setLocationOpen] = useState(false);\n  const [userData, setUserData] = useState({});\n  const dropdownRef = useRef(null);\n  const [locationInfo, setLocationInfo] = useState({});\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_SERVER_URL}/auth/consult`, {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n      },\n    }).then(async (res) => {\n      let data = await res.json();\n\n      switch (res.status) {\n        case 200:\n          setLogged(!logged);\n          setUserData(data);\n          break;\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    cep(userData.cep).then((res) => {\n      setLocationInfo(res);\n    });\n  }, [userData]);\n\n  useEffect(() => {\n    const pageClick = (e) => {\n      if (\n        dropdownRef.current !== null &&\n        !dropdownRef.current.contains(e.target)\n      ) {\n        setOpen(false);\n        setLocationOpen(false);\n      }\n    };\n\n    if (open || locationOpen) {\n      window.addEventListener(\"click\", pageClick);\n    }\n\n    return () => {\n      window.removeEventListener(\"click\", pageClick);\n    };\n  }, [open, locationOpen]);\n\n  function logout() {\n    localStorage.removeItem(\"access_token\");\n    localStorage.clear();\n  }\n\n  const navigate = useNavigate();\n\n  return (\n    <Container>\n      <img src=\"/assets/logo.png\" width={60} height={60} onClick={() => navigate(\"/\")} />\n      <Row>\n        <UserInfo>\n          {logged ? (\n            <>\n              <MenuWrapper>\n                <LocationInfo>\n                  <div>\n                    {logged ? (\n                      <LocationDropDownContainer locationOpen={locationOpen}>\n                        <LocationDropDown>\n                          <p>Deliver to</p>\n                          <h3>\n                            {locationInfo.city} {locationInfo.cep}\n                          </h3>\n                        </LocationDropDown>\n                      </LocationDropDownContainer>\n                    ) : (\n                      <p>Do login to see this information</p>\n                    )}\n                  </div>\n                  <RiTruckLine size={20} onClick={() => setLocationOpen(!locationOpen)}/>\n                </LocationInfo>\n                <HiOutlineShoppingBag\n                  onClick={() => navigate(\"/cart\")}\n                  size={20}\n                />\n                <Menu\n                  buttonWidth={20}\n                  isActive={open}\n                  toggleButton={() => setOpen(!open)}\n                />\n              </MenuWrapper>\n            </>\n          ) : (\n            <>\n              <div className=\"userinfo_div\" onClick={() => setOpen(!open)}>\n                <strong>Login</strong>\n                <RiArrowDropDownLine size={20} />\n              </div>\n            </>\n          )}\n        </UserInfo>\n        <DropDownContainer open={open} ref={dropdownRef}>\n          {open && (\n            <DropDownMenu key={open}>\n              {logged ? (\n                <UserProfile>\n                  <ProfilePicture\n                    picture={`${process.env.REACT_APP_SERVER_URL}/files/${userData.picture}`}\n                  />\n                  <div className=\"wrapper\">\n                    <h3>Hi {userData.name} 👋 </h3>\n                    <a href=\"/login\" onClick={() => logout()}>\n                      Log out\n                    </a>\n                  </div>\n                </UserProfile>\n              ) : (\n                <UserProfile>\n                  <ProfilePicture picture=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSP5IU8GgSurLLlvDn7J82C_uQHCfNHaxEqP7aU2P8xSx5QfhTIZVqHYkT-g7bggRhu92w&usqp=CAU\" />\n                  <div className=\"wrapper\">\n                    <h3>Hi! 👋 </h3>\n                    <Link to=\"/login\">Login or register!</Link>\n                  </div>\n                </UserProfile>\n              )}\n              <DropDownItem>\n                <a>Account</a>\n              </DropDownItem>\n              <DropDownItem\n                className=\"cart-btn\"\n                onClick={() => navigate(\"/cart\")}\n              >\n                <a>Cart</a>\n              </DropDownItem>\n              <DropDownItem>\n                <a>Orders</a>\n              </DropDownItem>\n              <DropDownItem>\n                <a>Security</a>\n              </DropDownItem>\n              <DropDownItem>\n                <a>Privacy</a>\n              </DropDownItem>\n              <DropDownItem>\n                <a>Wishlist</a>\n              </DropDownItem>\n              <DropDownItem onClick={() => navigate(\"/product/register\")}>\n                <a>Sell</a>\n              </DropDownItem>\n            </DropDownMenu>\n          )}\n        </DropDownContainer>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Header;\n","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/pages/MainPage/index.js",["114","115","116"],"import React, { useEffect, useState } from \"react\";\nimport ProductCard from \"../../components/ProductCard\";\nimport { Container, ProductList } from \"./styles\";\nimport { Redirect } from \"react-router\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction MainPage() {\n  const [products, setProducts] = useState({ data: [] });\n  const [logged, setLogged] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_SERVER_URL}/product/consult`, {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n      },\n    }).then(async (res) => {\n      let data = await res.json();\n\n      switch (res.status) {\n        case 200:\n          setProducts({ data: data });\n          setLogged(!logged);\n          break;\n      }\n    });\n  }, []);\n\n  return (\n    <Container>\n      <ProductList>\n        {logged ? (\n          <ul>\n            {products.data.map((p) => {\n              return (\n                <li>\n                  <ProductCard\n                    key={p._id}\n                    redirect={() => navigate(`/product/${p._id}`)}\n                    imgsrc={p.image[0].original}\n                    title={p.name}\n                    brand={p.brand}\n                    price={`$ ${p.price}`}\n                    portion={`${p.portion}x $${(p.price / p.portion).toFixed(\n                      2\n                    )}`}\n                  />\n                </li>\n              );\n            })}\n          </ul>\n        ) : (\n          <>\n            <h1>Não logado</h1>\n          </>\n        )}\n      </ProductList>\n    </Container>\n  );\n}\n\nexport default MainPage;\n","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/pages/UserLogin/index.js",["117","118"],"import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Container,\n  LoginWrapper,\n  LoginInput,\n  CreateAccountButton,\n  LoginButton,\n} from \"./styles\";\n\nfunction UserLogin() {\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userPass, setUserPass] = useState(\"\");\n\n  const authenticateUser = (e) => {\n    fetch(`${process.env.REACT_APP_SERVER_URL}/auth/authenticate`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        email: userEmail,\n        password: userPass,\n      }),\n    }).then(async (res) => {\n      let data = await res.json();\n\n      switch (res.status) {\n        case 404:\n          console.log(\"Usuário não encontrado\");\n          break;\n        case 403:\n          console.log(\"Senha inválida\");\n          break;\n        case 200:\n          if (data.token) {\n            userLogin(data.token);\n          }\n          break;\n      }\n    });\n\n    e.preventDefault();\n  }\n\n  function userLogin(token) {\n    localStorage.setItem(\"access_token\", token);\n\n    window.location.href = \"/\";\n  }\n\n  return (\n    <Container>\n      <LoginWrapper onSubmit={authenticateUser}>\n        <h2>Hi 👋, Use your email and password to login!</h2>\n        <p>Email</p>\n        <LoginInput\n          type=\"text\"\n          onChange={(e) => setUserEmail(e.target.value)}\n          required\n        />\n        <p>Password</p>\n        <LoginInput\n          type=\"password\"\n          onChange={(e) => setUserPass(e.target.value)}\n          required\n        />\n        <LoginButton\n          type=\"submit\"\n          value=\"Login\"\n        />\n        <CreateAccountButton\n          type=\"button\"\n          value=\"Create an account\"\n          onClick={() => (window.location.href = \"/register\")}\n        />\n      </LoginWrapper>\n    </Container>\n  );\n}\n\nexport default UserLogin;\n","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/pages/UserRegister/index.js",["119","120"],"import React, { useState } from \"react\";\nimport { AiFillCamera } from \"../../styles/Icons\";\nimport {\n  Container,\n  RegisterWrapper,\n  RegisterInput,\n  RegisterButton,\n  NumberInput,\n  DropContainer,\n  UploadMessage,\n  ImageContainer,\n  Preview,\n} from \"./styles\";\nimport Dropzone from \"react-dropzone\";\n\nfunction UploadedImage(props) {\n  return (\n    <ImageContainer>\n      <Preview src={props.preview} />\n      <p>{props.name}</p>\n    </ImageContainer>\n  );\n}\n\nfunction UserRegister() {\n  const [name, setName] = useState(\"\");\n  const [pictureInfo, setPictureInfo] = useState({});\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [cep, setCEP] = useState(0);\n\n  function createUserAccount() {\n    const data = new FormData();\n\n    data.append(\"file\", pictureInfo.file);\n    data.append(\"name\", name);\n    data.append(\"email\", email);\n    data.append(\"password\", password);\n    data.append(\"cep\", cep);\n\n    if (\n      cep != null &&\n      name != null &&\n      email != null &&\n      pictureInfo.file != null &&\n      password != null\n    ) {\n      fetch(`${process.env.REACT_APP_SERVER_URL}/auth/register`, {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n        },\n        body: data,\n      }).then(async (res) => {\n        let data = await res.json();\n\n        switch (res.status) {\n          case 200:\n            if (data.token) {\n              alert(\"conta criada com sucesso!\");\n              localStorage.setItem(\"access_token\", data.token);\n              window.location.href = \"/\";\n            }\n            break;\n        }\n      });\n    } else {\n      alert(\"campo faltando\");\n    }\n  }\n\n  function renderDragMessage(isDragActive, isDragReject) {\n    if (!isDragActive) {\n      return <UploadMessage>Drag images here...</UploadMessage>;\n    }\n\n    if (isDragReject) {\n      return <UploadMessage type=\"error\">Invalid file type</UploadMessage>;\n    }\n\n    return <UploadMessage type=\"success\">Drop it here</UploadMessage>;\n  }\n\n  function handleUpload(file) {\n    file.map((item) => {\n      setPictureInfo({\n        file: item,\n        name: item.name,\n        preview: URL.createObjectURL(item),\n      });\n    });\n  }\n\n  return (\n    <Container>\n      <RegisterWrapper>\n        <p>Your name</p>\n        <RegisterInput type=\"text\" onChange={(e) => setName(e.target.value)} />\n        <p>Your email</p>\n        <RegisterInput type=\"email\" onChange={(e) => setEmail(e.target.value)} />\n        <p>Your password</p>\n        <RegisterInput\n          type=\"password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <p>Your postal code</p>\n        <NumberInput onChange={setCEP} enableMobileNumericKeyboard />\n        <Dropzone accept=\"image/*\" onDropAccepted={handleUpload}>\n          {({ getRootProps, getInputProps, isDragActive, isDragReject }) => (\n            <DropContainer\n              {...getRootProps()}\n              isDragActive={isDragActive}\n              isDragReject={isDragReject}\n            >\n              <AiFillCamera size={30} color=\"gray\" />\n              <input {...getInputProps()} />\n              {renderDragMessage(isDragActive, isDragReject)}\n            </DropContainer>\n          )}\n        </Dropzone>\n        {pictureInfo.name != null && (\n          <UploadedImage\n            preview={pictureInfo.preview}\n            name={pictureInfo.name}\n          ></UploadedImage>\n        )}\n        <RegisterButton\n          type=\"button\"\n          value=\"Create account\"\n          onClick={() => createUserAccount()}\n        />\n      </RegisterWrapper>\n    </Container>\n  );\n}\n\nexport default UserRegister;\n","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/pages/ProductRegister/index.js",["121","122","123","124","125","126"],"import React, { useEffect, useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { AiFillCamera } from \"../../styles/Icons\";\nimport { uniqueId } from \"lodash\";\nimport { WithContext as ReactTags } from \"react-tag-input\";\nimport {\n  Container,\n  ProductRegisterInput,\n  ProductRegisterSelect,\n  ProductRegisterWrapper,\n  Row,\n  Column,\n  NumberInput,\n  InformationWrapper,\n  FinishBtn,\n  DropContainer,\n  UploadMessage,\n  ImageContainer,\n  PriceInput,\n  CustomHr,\n  Preview,\n} from \"./styles\";\n\nfunction FileList({ files }) {\n  return (\n    <ImageContainer>\n      {files.map((uploadedFile) => (\n        <li>\n          <Preview src={uploadedFile.preview} />\n        </li>\n      ))}\n    </ImageContainer>\n  );\n}\n\nfunction ProductRegister() {\n  const [name, setName] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [tags, setTags] = useState([]);\n  const [stock, setStock] = useState(0);\n  const [delivery, setDelPrice] = useState(0);\n  const [price, setPrice] = useState(0);\n  const [portion, setPortion] = useState(0);\n  const [pictureInfo, setPictureInfo] = useState([]);\n\n  function registerProduct() {\n    var tags_array = [];\n    var imgs_array = [];\n\n    tags.map((i) => {\n      tags_array.push(i.text);\n    });\n\n    pictureInfo.map((item) => {\n      const img_data = new FormData();\n\n      img_data.append(\"file\", item.file);\n\n      fetch(`${process.env.REACT_APP_SERVER_URL}/product/imageupl`, {\n        method: \"post\",\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n        },\n        body: img_data,\n      }).then(async (res) => {\n        let data = await res.text();\n\n        switch (res.status) {\n          case 200:\n            imgs_array.push({\n              original: `${process.env.REACT_APP_SERVER_URL}/files/${data}`,\n              thumbnail: `${process.env.REACT_APP_SERVER_URL}/files/${data}`,\n            });\n            break;\n          case 400:\n            alert(\"Ocorreu um erro no processamento da imagem!\");\n          break;\n        }\n      });\n    });\n\n    setTimeout(function () {\n      fetch(`${process.env.REACT_APP_SERVER_URL}/product/register`, {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n        },\n        body: JSON.stringify({\n          name: name,\n          description: desc,\n          brand: brand,\n          category: category,\n          tags: tags_array,\n          countInStock: stock,\n          deliveryPrice: delivery,\n          price: price,\n          portion: portion,\n          images: imgs_array,\n        }),\n      }).then(async (res) => {\n        switch (res.status) {\n          case 404:\n            console.log(\"Usuário não encontrado\");\n            break;\n          case 403:\n            console.log(\"Senha inválida\");\n            break;\n          case 200:\n            alert(\"Produto cadastrado!\");\n            window.location.href = \"/\";\n            break;\n        }\n      });\n    }, 3000);\n  }\n\n  function renderDragMessage(isDragActive, isDragReject) {\n    if (!isDragActive) {\n      return <UploadMessage>Drag a image to here...</UploadMessage>;\n    }\n\n    if (isDragReject) {\n      return <UploadMessage type=\"error\">Invalid file type</UploadMessage>;\n    }\n\n    return <UploadMessage type=\"success\">Drop it here</UploadMessage>;\n  }\n\n  function handleUpload(files) {\n    files.map((item) => {\n      setPictureInfo([\n        ...pictureInfo,\n        {\n          file: item,\n          id: uniqueId(),\n          name: item.name,\n          preview: URL.createObjectURL(item),\n        },\n      ]);\n    });\n  }\n\n  const handleDelete = (i) => {\n    setTags(tags.filter((tag, index) => index !== i));\n  };\n\n  const handleAddition = (tag) => {\n    setTags([...tags, tag]);\n  };\n\n  const handleDrag = (tag, currPos, newPos) => {\n    const newTags = tags.slice();\n\n    newTags.splice(currPos, 1);\n    newTags.splice(newPos, 0, tag);\n\n    setTags(newTags);\n  };\n\n  const handleTagClick = (index) => {\n    console.log(\"The tag at index \" + index + \" was clicked\");\n  };\n\n  return (\n    <Container>\n      <ProductRegisterWrapper>\n        <CustomHr />\n        <h1>Sell your item now!</h1>\n        <Row>\n          <Column>\n            <ProductRegisterInput\n              type=\"textbox\"\n              placeholder=\"Product Title*\"\n              onChange={(e) => setName(e.target.value)}\n            />\n            <ProductRegisterInput\n              placeholder=\"Product Description*\"\n              onChange={(e) => setDesc(e.target.value)}\n            />\n            <ProductRegisterInput\n              placeholder=\"Product Brand*\"\n              onChange={(e) => setBrand(e.target.value)}\n            />\n            <p>Category</p>\n            <ProductRegisterSelect\n              onChange={(e) => setCategory(e.target.value)}\n            >\n              <option value=\"Cars\">Cars</option>\n              <option value=\"Videogames\">Videogames</option>\n              <option value=\"Eletrodomestics\">Eletrodomestics</option>\n              <option value=\"Pets\">Pets</option>\n              <option value=\"Music\">Music</option>\n              <option value=\"Sports\">Sports</option>\n              <option value=\"Clothing and accessories\">Clothing and accessories</option>\n              <option value=\"Bikes\">Bikes</option>\n              <option value=\"Forniture\">Forniture</option>\n              <option value=\"Forniture\">Books</option>\n              <option value=\"Forniture\">Study</option>\n              <option value=\"Forniture\">DIY</option>\n              <option value=\"Other\">Other</option>\n            </ProductRegisterSelect>\n            <p>Tags</p>\n            <ReactTags\n              tags={tags}\n              handleDelete={handleDelete}\n              handleAddition={handleAddition}\n              handleDrag={handleDrag}\n              handleTagClick={handleTagClick}\n              inputFieldPosition=\"top\"\n              autocomplete\n            />\n            <Row>\n              <Dropzone accept=\"image/*\" onDropAccepted={handleUpload}>\n                {({\n                  getRootProps,\n                  getInputProps,\n                  isDragActive,\n                  isDragReject,\n                }) => (\n                  <DropContainer\n                    {...getRootProps()}\n                    isDragActive={isDragActive}\n                    isDragReject={isDragReject}\n                  >\n                    <AiFillCamera size={30} />\n                    <input {...getInputProps()} />\n                    {renderDragMessage(isDragActive, isDragReject)}\n                  </DropContainer>\n                )}\n              </Dropzone>\n              {!!pictureInfo.length && (\n                <FileList files={pictureInfo}></FileList>\n              )}\n            </Row>\n          </Column>\n          <Column>\n            <NumberInput\n              placeholder=\"Initial Stock*\"\n              onChange={setStock}\n              enableMobileNumericKeyboard\n            />\n            <p>Delivery Price</p>\n            <PriceInput\n              defaultValue={0}\n              intlConfig={{ locale: \"en-US\", currency: \"USD\" }}\n              onValueChange={(value, name) => setDelPrice(value)}\n            />\n            <p>Price</p>\n            <PriceInput\n              defaultValue={0}\n              intlConfig={{ locale: \"en-US\", currency: \"USD\" }}\n              onValueChange={(value, name) => setPrice(value)}\n            />\n            <p>Portion</p>\n            <ProductRegisterSelect\n              onChange={(e) => setPortion(parseInt(e.target.value))}\n            >\n              {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map((data) => (\n                <option value={data}>{data}</option>\n              ))}\n            </ProductRegisterSelect>\n          </Column>\n        </Row>\n        <InformationWrapper>\n          <FinishBtn\n            type=\"button\"\n            value=\"Finish\"\n            onClick={() => registerProduct()}\n          />\n        </InformationWrapper>\n      </ProductRegisterWrapper>\n    </Container>\n  );\n}\n\nexport default ProductRegister;\n","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/pages/DetailsPage/index.js",["127","128","129","130","131","132","133","134","135","136","137","138","139"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { BsGeoAlt, RiTruckLine } from \"../../styles/Icons\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport ImageGallery from \"react-image-gallery\";\nimport cep from \"cep-promise\";\nimport \"./styles.css\";\nimport ProductCard from \"../../components/ProductCard\";\nimport {\n  Container,\n  PictureWrapper,\n  ProductInfo,\n  SellerInfoWrapper,\n  SellerInfo,\n  Picture,\n  DeliveryInfo,\n  BuyNowBtn,\n  AddToCartBtn,\n  Delivery,\n  Description,\n  BuyBtns,\n  SimilarProducts,\n  CustomHr,\n  ProductsList,\n  MobilePicture,\n} from \"./styles\";\n\nfunction DetailsPage() {\n  const [productData, setProductData] = useState({});\n  const [similarProducts, setSimilarProducts] = useState({ data: [] });\n  const [logged, setLogged] = useState(false);\n  const [userData, setUserData] = useState({});\n  const [currentImageUrl, setCurrentImage] = useState(\"\");\n  const [isDesktop, setDesktop] = useState(window.innerWidth > 1000);\n  const [locationInfo, setLocationInfo] = useState({});\n  const [buyQuantity, setBuyQuantity] = useState(1);\n  const { productId } = useParams();\n\n  const updateMedia = () => {\n    setDesktop(window.innerWidth > 500);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateMedia);\n    return () => window.removeEventListener(\"resize\", updateMedia);\n  });\n\n  useEffect(() => {\n    fetch(\n      `${process.env.REACT_APP_SERVER_URL}/product/consult?id=${productId}`,\n      {\n        method: \"get\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      }\n    ).then(async (res) => {\n      let data = await res.json();\n\n      switch (res.status) {\n        case 404:\n          alert(\"Produto não encontrado\");\n          break;\n        case 200:\n          setProductData(data);\n          setCurrentImage(data.image[0].original);\n          break;\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_SERVER_URL}/auth/consult`, {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n      },\n    }).then(async (res) => {\n      let data = await res.json();\n\n      switch (res.status) {\n        case 200:\n          setLogged(!logged);\n          setUserData(data);\n          break;\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    fetch(\n      `${process.env.REACT_APP_SERVER_URL}/product/consult_similar_products?category=${productData.category}&id=${productId}`,\n      {\n        method: \"get\",\n      }\n    ).then(async (res) => {\n      let data = await res.json();\n\n      switch (res.status) {\n        case 200:\n          setSimilarProducts({ data: data });\n          break;\n      }\n    });\n  }, [productData]);\n\n  function addToCart() {\n    if (logged) {\n      fetch(`${process.env.REACT_APP_SERVER_URL}/cart/addToCart`, {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n        },\n        body: JSON.stringify({\n          productId: productId,\n          quantity: buyQuantity,\n        }),\n      }).then(async (res) => {\n        switch (res.status) {\n          case 200:\n            alert(\"Item adicionado ao carrinho!\", res);\n            break;\n        }\n      });\n    } else {\n      alert(\"Logue para usar o carrinho!\");\n    }\n  }\n\n  useEffect(() => {\n    cep(userData.cep).then((res) => {\n      setLocationInfo(res);\n    });\n  }, [userData]);\n\n  const setView = (event, index) => {\n    setCurrentImage(productData.image[index].original);\n  };\n\n  return (\n    <Container>\n      <PictureWrapper>\n        {productData.image != undefined ? (\n          <>\n            {isDesktop ? (\n              <>\n                {\" \"}\n                <Picture\n                  enlargedImageContainerClassName=\"large-image\"\n                  hoverDelayInMs={0}\n                  {...{\n                    smallImage: {\n                      src: currentImageUrl,\n                      width: 480,\n                      height: 480,\n                    },\n                    largeImage: {\n                      src: currentImageUrl,\n                      width: 1200,\n                      height: 1800,\n                    },\n                  }}\n                />\n                <ImageGallery\n                  items={productData.image}\n                  thumbnailClass=\"thumb\"\n                  onThumbnailClick={setView}\n                  showFullscreenButton={false}\n                  showPlayButton={false}\n                  showNav={false}\n                />\n              </>\n            ) : (\n              <MobilePicture src={productData.image[0].original} />\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n      </PictureWrapper>\n      <ProductInfo>\n        <h2>{productData.name}</h2>\n        <Rating\n          name=\"half-rating\"\n          defaultValue={4.7}\n          size=\"medium\"\n          precision={0.5}\n          readOnly\n        />\n        <h1>$ {productData.price}</h1>\n        <h4>{`+ ${productData.portion}x $${(\n          productData.price / productData.portion\n        ).toFixed(2)}`}</h4>\n        <hr />\n        <ul>\n          <li>\n            <strong>Brand: </strong>\n            <span>{productData.brand}</span>\n          </li>\n          <li>\n            <strong>Category: </strong>\n            <span>{productData.category}</span>\n          </li>\n          <li>\n            <strong>Tags: </strong>\n            {productData.tags != undefined ? (\n              productData.tags.map((t, index) => {\n                return <span key={`${index}`}>{(index ? \", \" : \"\") + t}</span>;\n              })\n            ) : (\n              <></>\n            )}\n          </li>\n        </ul>\n      </ProductInfo>\n      <SellerInfoWrapper>\n        <SellerInfo>\n          <ul>\n            <li>\n              <h2>$ {productData.price}</h2>\n            </li>\n            <li>\n              {productData.deliveryPrice > 0 ? (\n                <DeliveryInfo>\n                  <RiTruckLine size={25} />\n                  <p>Shipping price: $ {productData.deliveryPrice}</p>\n                </DeliveryInfo>\n              ) : (\n                <DeliveryInfo>\n                  <RiTruckLine size={25} fill=\"var(--accent-color)\" />\n                  <p>\n                    Shipping <a>FREE</a>\n                  </p>\n                </DeliveryInfo>\n              )}\n            </li>\n            <li>\n              <DeliveryInfo>\n                <BsGeoAlt size={20} />\n                {logged ? (\n                  <Delivery>\n                    {userData.cep ? (\n                      <>\n                        <p>Deliver to {userData.name},</p>\n                        <p>\n                          <b>{locationInfo.city}</b> {locationInfo.cep}\n                        </p>\n                      </>\n                    ) : (\n                      <p>You need to register an address!</p>\n                    )}\n                  </Delivery>\n                ) : (\n                  <p>\n                    <Link to=\"/login\">Login or register!</Link>\n                  </p>\n                )}\n              </DeliveryInfo>\n            </li>\n            <li>\n              {productData.countInStock > 0 ? (\n                <h2>In Stock!</h2>\n              ) : (\n                <h2>Out of Stock.</h2>\n              )}\n            </li>\n            <li>\n              {productData.countInStock > 0 ? (\n                <>\n                  <strong>Quantity:</strong>\n                  <select\n                    onChange={(e) => setBuyQuantity(parseInt(e.target.value))}\n                    className=\"quantity\"\n                  >\n                    {Array.from(Array(productData.countInStock).keys()).map(\n                      (i) => {\n                        return i > 0 && i < 6 && <option value={i}>{i}</option>;\n                      }\n                    )}\n                  </select>\n                  <sub>({productData.countInStock} in stock!)</sub>\n                </>\n              ) : (\n                <></>\n              )}\n            </li>\n            <li>\n              <BuyBtns>\n                <BuyNowBtn type=\"button\" value=\"Buy Now\" />\n                <AddToCartBtn\n                  type=\"button\"\n                  value=\"Add to Cart\"\n                  onClick={() => addToCart()}\n                />\n              </BuyBtns>\n            </li>\n          </ul>\n        </SellerInfo>\n      </SellerInfoWrapper>\n      <Description>{productData.description}</Description>\n      <SimilarProducts>\n        <h3>Similar products you may like:</h3>\n        <ProductsList>\n          {similarProducts.data.slice(0, 4).map((p) => {\n            return (\n              <li>\n                <ProductCard\n                  key={p._id}\n                  redirect={() => (window.location.href = p._id)}\n                  imgsrc={p.image[0].original}\n                  title={p.name}\n                  brand={p.brand}\n                  price={`R$ ${p.price}`}\n                  portion={`${p.portion}x R$${(p.price / p.portion).toFixed(\n                    2\n                  )} sem juros`}\n                />\n              </li>\n            );\n          })}\n        </ProductsList>\n      </SimilarProducts>\n    </Container>\n  );\n}\n\nexport default DetailsPage;\n","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/pages/CartPage/index.js",["140","141","142","143","144","145"],"import React, { useEffect, useState } from \"react\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport {\n  Container,\n  CartContainer,\n  Info,\n  Row,\n  StockInfo,\n  FinalInfo,\n  BuyNowBtn,\n} from \"./styles\";\n\nfunction CartCard(props) {\n  const [valid, setValid] = useState(true);\n\n  function undoRemove() {\n    setValid(!valid);\n    fetch(`${process.env.REACT_APP_SERVER_URL}/cart/addToCart`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n      },\n      body: JSON.stringify({\n        productId: props.id,\n        quantity: props.quantity,\n      }),\n    }).then(async (res) => {\n      switch (res.status) {\n        case 200:\n          alert(\"Item adicionado novamente ao carrinho!\", res);\n          break;\n      }\n    });\n  }\n\n  function removeFromCart() {\n    setValid(!valid);\n    fetch(\n      `${process.env.REACT_APP_SERVER_URL}/cart/removeFromCart?id=${props.id}`,\n      {\n        method: \"get\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n        },\n      }\n    ).then(async (res) => {\n      let data = await res.json();\n    });\n  }\n\n  return (\n    <CartContainer>\n      {valid ? (\n        <>\n          <Row>\n            <img src={props.image[0].original}></img>\n            <Info>\n              <p>{props.title}</p>\n              <sub>\n                {\" \"}\n                {props.price.toLocaleString(\"en-US\", {\n                  style: \"currency\",\n                  currency: \"USD\",\n                })}{\" \"}\n                {props.portion}x of{\" \"}\n                {(props.price / props.portion).toLocaleString(\"en-US\", {\n                  style: \"currency\",\n                  currency: \"USD\",\n                })}\n              </sub>\n              <Rating\n                name=\"half-rating\"\n                defaultValue={4.7}\n                size=\"small\"\n                precision={0.5}\n                readOnly\n              />\n              <b>\n                {props.deliveryPrice.toLocaleString(\"en-US\", {\n                  style: \"currency\",\n                  currency: \"USD\",\n                })}{\" \"}\n                to {props.cep}\n              </b>\n            </Info>\n          </Row>\n          <StockInfo>\n            <input\n              type=\"button\"\n              value=\"Remove\"\n              onClick={() => removeFromCart()}\n            />\n            <strong>Quantity: {props.quantity}</strong>\n            <p>\n              Product sub total:{\" \"}\n              {props.itemSubTotal.toLocaleString(\"en-US\", {\n                style: \"currency\",\n                currency: \"USD\",\n              })}\n            </p>\n            <sub>{props.countInStock} In Stock</sub>\n          </StockInfo>\n        </>\n      ) : (\n        <input onClick={() => undoRemove()} value=\"Undo\" type=\"button\" />\n      )}\n    </CartContainer>\n  );\n}\n\nfunction CartPage() {\n  const [logged, setLogged] = useState(false);\n  const [cartData, setCartData] = useState({ data: [] });\n  const [productSubTotal, setSubTotal] = useState(0);\n  const [userData, setUserData] = useState({});\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_SERVER_URL}/cart/consultTheCart`, {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n      },\n    }).then(async (res) => {\n      let data = await res.json();\n\n      switch (res.status) {\n        case 200:\n          setCartData({ data: data.product, data2: data.cart });\n          setLogged(true);\n          break;\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_SERVER_URL}/auth/consult`, {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n      },\n    }).then(async (res) => {\n      let data = await res.json();\n\n      switch (res.status) {\n        case 200:\n          setUserData(data);\n          break;\n      }\n    });\n  }, []);\n\n  function getQuantity(id) {\n    for (var i = 0; i < cartData.data2.length; i++) {\n      var cartItem = cartData.data2[i];\n\n      if (id === cartItem.id) {\n        return cartItem.quantity;\n      }\n    }\n  }\n\n  function getSubTotal(id, price) {\n    var quantity = getQuantity(id);\n\n    return quantity * price;\n  }\n\n  function getItemQuantity() {\n    let total = 0;\n\n    cartData.data.forEach((p) => {\n      var f = getQuantity(p._id);\n      total = total + f;\n    });\n\n    return total;\n  }\n\n  useEffect(() => {\n    var array = [];\n    var total = 0;\n\n    cartData.data.forEach((p) => {\n      var itemPrice = getSubTotal(p._id, p.price);\n\n      array.push(itemPrice);\n    });\n\n    for (var i = 0; i < array.length; ++i) {\n      total += array[i];\n    }\n\n    setSubTotal(total);\n  }, [cartData]);\n\n  return (\n    <Container>\n      {logged ? (\n        <>\n          {cartData.data.map((p) => {\n            return (\n              <CartCard\n                image={p.image}\n                title={p.name}\n                price={p.price}\n                portion={p.portion}\n                rating={p.rating}\n                deliveryPrice={p.deliveryPrice}\n                quantity={getQuantity(p._id)}\n                itemSubTotal={getSubTotal(p._id, p.price)}\n                countInStock={p.countInStock}\n                id={p._id}\n                cep={userData.cep}\n              />\n            );\n          })}\n          <FinalInfo>\n            <p>\n              Subtotal ({getItemQuantity()} items):{\" \"}\n              <strong>\n                {productSubTotal.toLocaleString(\"en-US\", {\n                  style: \"currency\",\n                  currency: \"USD\",\n                })}\n              </strong>\n            </p>\n            <BuyNowBtn type=\"button\" value=\"Buy Now\" />\n          </FinalInfo>\n        </>\n      ) : (\n        <h1>You must be logged to use the cart</h1>\n      )}\n    </Container>\n  );\n}\n\nexport default CartPage;\n","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/styles/Icons.js",[],"/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/components/Header/styles.js",[],"/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/pages/UserLogin/styles.js",[],"/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/pages/UserRegister/styles.js",[],"/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/pages/MainPage/styles.js",[],"/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/pages/ProductRegister/styles.js",[],"/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/pages/DetailsPage/styles.js",[],"/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/pages/CartPage/styles.js",[],"/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/components/ProductCard/index.js",["146","147"],"import React from \"react\";\n\nimport {\n  Container,\n  ProductInfo,\n  PriceInfo,\n  AboutInfo,\n  ImageContainer,\n} from \"./styles\";\n\nfunction ProductCard(props) {\n  return (\n    <Container onClick={() => props.redirect()}>\n      <ImageContainer>\n        <img src={props.imgsrc} />\n      </ImageContainer>\n      <ProductInfo>\n        <AboutInfo>\n          <div>\n            <a>{props.title}</a>\n          </div>\n          <sub>\n            <p>{props.brand}</p>\n          </sub>\n        </AboutInfo>\n        <PriceInfo>\n          <h3>{props.price}</h3>\n          <sub>\n            <p>{props.portion}</p>\n          </sub>\n        </PriceInfo>\n      </ProductInfo>\n    </Container>\n  );\n}\n\nexport default ProductCard;\n","/home/twilightmoon/Documents/Projects/ecommerce-project/client/src/components/ProductCard/styles.js",[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":26},{"ruleId":"152","severity":1,"message":"156","line":3,"column":20,"nodeType":"154","messageId":"155","endLine":3,"endColumn":31},{"ruleId":"152","severity":1,"message":"157","line":7,"column":10,"nodeType":"154","messageId":"155","endLine":7,"endColumn":21},{"ruleId":"152","severity":1,"message":"158","line":13,"column":3,"nodeType":"154","messageId":"155","endLine":13,"endColumn":16},{"ruleId":"152","severity":1,"message":"159","line":18,"column":3,"nodeType":"154","messageId":"155","endLine":18,"endColumn":13},{"ruleId":"152","severity":1,"message":"160","line":20,"column":3,"nodeType":"154","messageId":"155","endLine":20,"endColumn":12},{"ruleId":"161","severity":1,"message":"162","line":47,"column":7,"nodeType":"163","messageId":"164","endLine":52,"endColumn":8},{"ruleId":"165","severity":1,"message":"166","line":54,"column":6,"nodeType":"167","endLine":54,"endColumn":8,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":91,"column":7,"nodeType":"171","endLine":91,"endColumn":90},{"ruleId":"172","severity":1,"message":"173","line":159,"column":17,"nodeType":"171","endLine":159,"endColumn":20},{"ruleId":"172","severity":1,"message":"173","line":165,"column":17,"nodeType":"171","endLine":165,"endColumn":20},{"ruleId":"172","severity":1,"message":"173","line":168,"column":17,"nodeType":"171","endLine":168,"endColumn":20},{"ruleId":"172","severity":1,"message":"173","line":171,"column":17,"nodeType":"171","endLine":171,"endColumn":20},{"ruleId":"172","severity":1,"message":"173","line":174,"column":17,"nodeType":"171","endLine":174,"endColumn":20},{"ruleId":"172","severity":1,"message":"173","line":177,"column":17,"nodeType":"171","endLine":177,"endColumn":20},{"ruleId":"172","severity":1,"message":"173","line":180,"column":17,"nodeType":"171","endLine":180,"endColumn":20},{"ruleId":"152","severity":1,"message":"174","line":4,"column":10,"nodeType":"154","messageId":"155","endLine":4,"endColumn":18},{"ruleId":"161","severity":1,"message":"162","line":23,"column":7,"nodeType":"163","messageId":"164","endLine":28,"endColumn":8},{"ruleId":"165","severity":1,"message":"166","line":30,"column":6,"nodeType":"167","endLine":30,"endColumn":8,"suggestions":"175"},{"ruleId":"152","severity":1,"message":"156","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":21},{"ruleId":"161","severity":1,"message":"162","line":29,"column":7,"nodeType":"163","messageId":"164","endLine":41,"endColumn":8},{"ruleId":"161","severity":1,"message":"162","line":57,"column":9,"nodeType":"163","messageId":"164","endLine":65,"endColumn":10},{"ruleId":"176","severity":1,"message":"177","line":85,"column":21,"nodeType":"178","messageId":"179","endLine":85,"endColumn":23},{"ruleId":"152","severity":1,"message":"153","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":26},{"ruleId":"176","severity":1,"message":"177","line":52,"column":18,"nodeType":"178","messageId":"179","endLine":52,"endColumn":20},{"ruleId":"176","severity":1,"message":"177","line":56,"column":28,"nodeType":"178","messageId":"179","endLine":56,"endColumn":30},{"ruleId":"161","severity":1,"message":"162","line":70,"column":9,"nodeType":"163","messageId":"164","endLine":80,"endColumn":10},{"ruleId":"161","severity":1,"message":"162","line":105,"column":9,"nodeType":"163","messageId":"164","endLine":116,"endColumn":10},{"ruleId":"176","severity":1,"message":"177","line":134,"column":22,"nodeType":"178","messageId":"179","endLine":134,"endColumn":24},{"ruleId":"152","severity":1,"message":"180","line":1,"column":38,"nodeType":"154","messageId":"155","endLine":1,"endColumn":44},{"ruleId":"152","severity":1,"message":"181","line":2,"column":16,"nodeType":"154","messageId":"155","endLine":2,"endColumn":27},{"ruleId":"152","severity":1,"message":"182","line":23,"column":3,"nodeType":"154","messageId":"155","endLine":23,"endColumn":11},{"ruleId":"161","severity":1,"message":"162","line":61,"column":7,"nodeType":"163","messageId":"164","endLine":69,"endColumn":8},{"ruleId":"165","severity":1,"message":"183","line":71,"column":6,"nodeType":"167","endLine":71,"endColumn":8,"suggestions":"184"},{"ruleId":"161","severity":1,"message":"162","line":84,"column":7,"nodeType":"163","messageId":"164","endLine":89,"endColumn":8},{"ruleId":"165","severity":1,"message":"166","line":91,"column":6,"nodeType":"167","endLine":91,"endColumn":8,"suggestions":"185"},{"ruleId":"161","severity":1,"message":"162","line":102,"column":7,"nodeType":"163","messageId":"164","endLine":106,"endColumn":8},{"ruleId":"165","severity":1,"message":"183","line":108,"column":6,"nodeType":"167","endLine":108,"endColumn":19,"suggestions":"186"},{"ruleId":"161","severity":1,"message":"162","line":123,"column":9,"nodeType":"163","messageId":"164","endLine":127,"endColumn":10},{"ruleId":"187","severity":1,"message":"188","line":147,"column":28,"nodeType":"189","messageId":"190","endLine":147,"endColumn":30},{"ruleId":"187","severity":1,"message":"188","line":210,"column":31,"nodeType":"189","messageId":"190","endLine":210,"endColumn":33},{"ruleId":"172","severity":1,"message":"173","line":236,"column":30,"nodeType":"171","endLine":236,"endColumn":33},{"ruleId":"161","severity":1,"message":"162","line":29,"column":7,"nodeType":"163","messageId":"164","endLine":33,"endColumn":8},{"ruleId":"152","severity":1,"message":"191","line":50,"column":11,"nodeType":"154","messageId":"155","endLine":50,"endColumn":15},{"ruleId":"169","severity":1,"message":"170","line":59,"column":13,"nodeType":"171","endLine":59,"endColumn":48},{"ruleId":"161","severity":1,"message":"162","line":131,"column":7,"nodeType":"163","messageId":"164","endLine":136,"endColumn":8},{"ruleId":"161","severity":1,"message":"162","line":151,"column":7,"nodeType":"163","messageId":"164","endLine":155,"endColumn":8},{"ruleId":"165","severity":1,"message":"192","line":201,"column":6,"nodeType":"167","endLine":201,"endColumn":16,"suggestions":"193"},{"ruleId":"169","severity":1,"message":"170","line":15,"column":9,"nodeType":"171","endLine":15,"endColumn":35},{"ruleId":"172","severity":1,"message":"173","line":20,"column":13,"nodeType":"171","endLine":20,"endColumn":16},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'SearchWrapper' is defined but never used.","'SearchIcon' is defined but never used.","'SearchBar' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'logged'. Either include it or remove the dependency array. You can also do a functional update 'setLogged(l => ...)' if you only need 'logged' in the 'setLogged' call.","ArrayExpression",["196"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Redirect' is defined but never used.",["197"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useRef' is defined but never used.","'useNavigate' is defined but never used.","'CustomHr' is defined but never used.","React Hook useEffect has a missing dependency: 'productId'. Either include it or remove the dependency array.",["198"],["199"],["200"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSubTotal'. Either include it or remove the dependency array.",["201"],"no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},{"desc":"202","fix":"204"},{"desc":"205","fix":"206"},{"desc":"202","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},"Update the dependencies array to be: [logged]",{"range":"212","text":"213"},{"range":"214","text":"213"},"Update the dependencies array to be: [productId]",{"range":"215","text":"216"},{"range":"217","text":"213"},"Update the dependencies array to be: [productData, productId]",{"range":"218","text":"219"},"Update the dependencies array to be: [cartData, getSubTotal]",{"range":"220","text":"221"},[1368,1370],"[logged]",[916,918],[1973,1975],"[productId]",[2471,2473],[2868,2881],"[productData, productId]",[5017,5027],"[cartData, getSubTotal]"]