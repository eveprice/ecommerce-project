{"ast":null,"code":"var _jsxFileName = \"/home/evelynn/Documents/ecommerce-project/client/src/pages/UserRegister/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, RegisterWrapper, RegisterInput, RegisterButton, DropContainer, UploadMessage } from \"./styles\";\nimport Dropzone from \"react-dropzone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserRegister() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [cep, setCEP] = useState(0);\n\n  function createUserAccount() {\n    fetch(\"http://localhost:3001/auth/register\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        name: name,\n        email: email,\n        password: password,\n        cep: cep\n      })\n    }).then(async res => {\n      let data = await res.json();\n\n      switch (res.status) {\n        case 404:\n          console.log(\"Usuário não encontrado\");\n          break;\n\n        case 403:\n          console.log(\"Senha inválida\");\n          break;\n\n        case 200:\n          if (data.token) {\n            alert(\"conta criada com sucesso!\");\n            localStorage.setItem(\"access_token\", data.token);\n            window.location.href = \"/\";\n          }\n\n          break;\n      }\n    });\n  }\n\n  function renderDragMessage(isDragActive, isDragReject) {\n    if (!isDragActive) {\n      return /*#__PURE__*/_jsxDEV(UploadMessage, {\n        children: \"Drag images here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (isDragReject) {\n      return /*#__PURE__*/_jsxDEV(UploadMessage, {\n        children: \"Invalid file type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(UploadMessage, {\n      children: \"Drop it here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(RegisterWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Seu nome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RegisterInput, {\n        type: \"text\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Seu email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RegisterInput, {\n        type: \"text\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Sua senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RegisterInput, {\n        type: \"password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Seu CEP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RegisterInput, {\n        type: \"text\",\n        onChange: e => setCEP(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropzone, {\n        accept: \"image/*\",\n        onDrop: acceptedFiles => {},\n        children: ({\n          getRootProps,\n          getInputProps,\n          isDragActive,\n          isDragReject\n        }) => /*#__PURE__*/_jsxDEV(DropContainer, { ...getRootProps(),\n          isDragActive: isDragActive,\n          isDragReject: isDragReject,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Arraste e solte uma imagem aqui!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), renderDragMessage(isDragActive, isDragReject)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RegisterButton, {\n        type: \"button\",\n        value: \"Criar conta\",\n        onClick: () => createUserAccount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserRegister, \"yE6XEsL1KsaJ8XKMAe+IWShxdzU=\");\n\n_c = UserRegister;\nexport default UserRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserRegister\");","map":{"version":3,"sources":["/home/evelynn/Documents/ecommerce-project/client/src/pages/UserRegister/index.js"],"names":["React","useState","Container","RegisterWrapper","RegisterInput","RegisterButton","DropContainer","UploadMessage","Dropzone","UserRegister","name","setName","email","setEmail","password","setPassword","cep","setCEP","createUserAccount","fetch","method","headers","Accept","body","JSON","stringify","then","res","data","json","status","console","log","token","alert","localStorage","setItem","window","location","href","renderDragMessage","isDragActive","isDragReject","e","target","value","acceptedFiles","getRootProps","getInputProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Container,\n  RegisterWrapper,\n  RegisterInput,\n  RegisterButton,\n  DropContainer,\n  UploadMessage\n} from \"./styles\";\nimport Dropzone from \"react-dropzone\";\n\nfunction UserRegister() {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [cep, setCEP] = useState(0);\n\n  function createUserAccount() {\n    fetch(\"http://localhost:3001/auth/register\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        name: name,\n        email: email,\n        password: password,\n        cep: cep,\n      }),\n    }).then(async (res) => {\n      let data = await res.json();\n\n      switch (res.status) {\n        case 404:\n          console.log(\"Usuário não encontrado\");\n          break;\n        case 403:\n          console.log(\"Senha inválida\");\n          break;\n        case 200:\n          if (data.token) {\n            alert(\"conta criada com sucesso!\");\n            localStorage.setItem(\"access_token\", data.token);\n            window.location.href = \"/\";\n          }\n          break;\n      }\n    });\n  }\n\n  function renderDragMessage(isDragActive, isDragReject) {\n    if (!isDragActive) {\n      return <UploadMessage>Drag images here...</UploadMessage>\n    }\n\n    if (isDragReject) {\n      return <UploadMessage>Invalid file type</UploadMessage>\n    }\n\n    return <UploadMessage>Drop it here</UploadMessage>\n\n  }\n\n  return (\n    <Container>\n      <RegisterWrapper>\n        <p>Seu nome</p>\n        <RegisterInput type=\"text\" onChange={(e) => setName(e.target.value)} />\n        <p>Seu email</p>\n        <RegisterInput type=\"text\" onChange={(e) => setEmail(e.target.value)} />\n        <p>Sua senha</p>\n        <RegisterInput\n          type=\"password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <p>Seu CEP</p>\n        <RegisterInput type=\"text\" onChange={(e) => setCEP(e.target.value)} />\n        <Dropzone accept=\"image/*\" onDrop={(acceptedFiles) => {}}>\n          {({ getRootProps, getInputProps, isDragActive, isDragReject }) => (\n            <DropContainer\n              {...getRootProps()}\n              isDragActive={isDragActive}\n              isDragReject={isDragReject}\n            >\n              <p>Arraste e solte uma imagem aqui!</p>\n              <input {...getInputProps()} />\n              {renderDragMessage(isDragActive, isDragReject)}\n            </DropContainer>\n          )}\n        </Dropzone>\n        <RegisterButton\n          type=\"button\"\n          value=\"Criar conta\"\n          onClick={() => createUserAccount()}\n        />\n      </RegisterWrapper>\n    </Container>\n  );\n}\n\nexport default UserRegister;\n"]},"metadata":{},"sourceType":"module"}