{"ast":null,"code":"import { LOGIN_USER, REGISTER_USER, AUTH_USER, LOGOUT_USER, ADD_TO_CART_USER, GET_CART_ITEMS_USER, REMOVE_CART_ITEM_USER, ON_SUCCESS_BUY_USER } from './index';\nexport function registerUser(name, email, password, cep) {\n  fetch(\"http://localhost:3000/auth/register\", {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    },\n    body: JSON.stringify({\n      name: name,\n      email: email,\n      password: password,\n      cep: cep\n    })\n  }).then(async res => {\n    let data = await res.json();\n\n    switch (res.status) {\n      case 404:\n        return \"Usuário não encontrado\";\n        break;\n\n      case 403:\n        return \"Senha inválida\";\n        break;\n\n      case 200:\n        if (data.token) {\n          alert(\"conta criada com sucesso!\");\n          localStorage.setItem(\"access_token\", data.token);\n          window.location.href = \"/\";\n        }\n\n        break;\n    }\n  });\n}","map":{"version":3,"sources":["/home/eveprice/Documentos/React/ecommerce/client/src/actions/user_actions.js"],"names":["LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","ADD_TO_CART_USER","GET_CART_ITEMS_USER","REMOVE_CART_ITEM_USER","ON_SUCCESS_BUY_USER","registerUser","name","email","password","cep","fetch","method","headers","Accept","body","JSON","stringify","then","res","data","json","status","token","alert","localStorage","setItem","window","location","href"],"mappings":"AAAA,SACIA,UADJ,EAEIC,aAFJ,EAGIC,SAHJ,EAIIC,WAJJ,EAKIC,gBALJ,EAMIC,mBANJ,EAOIC,qBAPJ,EAQIC,mBARJ,QASO,SATP;AAWA,OAAO,SAASC,YAAT,CAAsBC,IAAtB,EAA4BC,KAA5B,EAAmCC,QAAnC,EAA6CC,GAA7C,EAAkD;AACrDC,EAAAA,KAAK,CAAC,qCAAD,EAAwC;AAC3CC,IAAAA,MAAM,EAAE,MADmC;AAE3CC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,MAAM,EAAE;AAFD,KAFkC;AAM3CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBV,MAAAA,IAAI,EAAEA,IADa;AAEnBC,MAAAA,KAAK,EAAEA,KAFY;AAGnBC,MAAAA,QAAQ,EAAEA,QAHS;AAInBC,MAAAA,GAAG,EAAEA;AAJc,KAAf;AANqC,GAAxC,CAAL,CAYGQ,IAZH,CAYQ,MAAOC,GAAP,IAAe;AACrB,QAAIC,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAjB;;AAEA,YAAQF,GAAG,CAACG,MAAZ;AACE,WAAK,GAAL;AACE,eAAQ,wBAAR;AACA;;AACF,WAAK,GAAL;AACE,eAAQ,gBAAR;AACA;;AACF,WAAK,GAAL;AACE,YAAIF,IAAI,CAACG,KAAT,EAAgB;AACdC,UAAAA,KAAK,CAAC,2BAAD,CAAL;AACAC,UAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCN,IAAI,CAACG,KAA1C;AACAI,UAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD;;AACD;AAbJ;AAeD,GA9BD;AA+BH","sourcesContent":["import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n    ADD_TO_CART_USER,\n    GET_CART_ITEMS_USER,\n    REMOVE_CART_ITEM_USER,\n    ON_SUCCESS_BUY_USER\n} from './index';\n\nexport function registerUser(name, email, password, cep) {\n    fetch(\"http://localhost:3000/auth/register\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        name: name,\n        email: email,\n        password: password,\n        cep: cep,\n      }),\n    }).then(async (res) => {\n      let data = await res.json();\n\n      switch (res.status) {\n        case 404:\n          return (\"Usuário não encontrado\");\n          break;\n        case 403:\n          return (\"Senha inválida\");\n          break;\n        case 200:\n          if (data.token) {\n            alert(\"conta criada com sucesso!\");\n            localStorage.setItem(\"access_token\", data.token);\n            window.location.href = \"/\";\n          }\n          break;\n      }\n    });\n}"]},"metadata":{},"sourceType":"module"}