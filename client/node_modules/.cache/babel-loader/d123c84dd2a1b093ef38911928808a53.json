{"ast":null,"code":"var _jsxFileName = \"/home/evelynn/Documents/ecommerce-project/client/src/pages/CartPage/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { Container, CartContainer, Info, Row, StockInfo } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CartCard(props) {\n  _s();\n\n  const [buyQuantity, setBuyQuantity] = useState(1);\n  const [valid, setValid] = useState(true);\n\n  function undoRemove() {\n    setValid(!valid);\n    fetch(`${process.env.REACT_APP_SERVER_URL}/cart/addToCart`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`\n      },\n      body: JSON.stringify({\n        productId: props.id,\n        quantity: props.quantity\n      })\n    }).then(async res => {\n      switch (res.status) {\n        case 200:\n          alert(\"Item adicionado novamente ao carrinho!\", res);\n          break;\n      }\n    });\n  }\n\n  function removeFromCart() {\n    setValid(!valid);\n    fetch(`${process.env.REACT_APP_SERVER_URL}/cart/removeFromCart?id=${props.id}`, {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`\n      }\n    }).then(async res => {\n      let data = await res.json();\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(CartContainer, {\n    children: valid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${process.env.REACT_APP_SERVER_URL}/files/${props.image}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Info, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: props.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"sub\", {\n            children: [\"$ \", props.price, \" \", props.portion, \"x of \", \"$\", (props.price / props.portion).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Rating, {\n            name: \"half-rating\",\n            defaultValue: props.rating,\n            size: \"small\",\n            precision: 0.5,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"$ \", props.deliveryPrice, \" to \", props.cep]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StockInfo, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Remove\",\n          onClick: () => removeFromCart()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          defaultValue: props.quantity < props.countInStock ? props.quantity : props.countInStock,\n          children: Array.from(Array(props.countInStock + 1).keys()).map(i => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: i,\n              children: i\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"sub\", {\n          children: [props.countInStock, \" In Stock\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"input\", {\n      onClick: () => undoRemove(),\n      value: \"Undo\",\n      type: \"button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartCard, \"fL9c1SIz5k0AvxLP5FeiBggv7Ps=\");\n\n_c = CartCard;\n\nfunction CartPage() {\n  _s2();\n\n  const [logged, setLogged] = useState(false);\n  const [cartData, setCartData] = useState({\n    data: []\n  });\n  const [userData, setUserData] = useState({});\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_SERVER_URL}/cart/consultTheCart`, {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`\n      }\n    }).then(async res => {\n      let data = await res.json();\n\n      if (logged) {\n        data.product.forEach(item => {\n          data.cart.forEach(cartItem => {\n            if (item._id === cartItem.id) {\n              item.quantity = cartItem.quantity;\n            }\n          });\n        });\n      }\n\n      switch (res.status) {\n        case 200:\n          setCartData({\n            data: data.product\n          });\n          setLogged(true);\n          break;\n      }\n    });\n  }, [cartData]);\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_SERVER_URL}/auth/consult`, {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`\n      }\n    }).then(async res => {\n      let data = await res.json();\n\n      switch (res.status) {\n        case 200:\n          setUserData(data);\n          break;\n      }\n    });\n  }, []);\n\n  function getQuantity() {\n    fetch(`${process.env.REACT_APP_SERVER_URL}/cart/consultTheCart`, {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`\n      }\n    }).then(async res => {\n      let data = await res.json();\n\n      if (logged) {\n        data.product.forEach(item => {\n          data.cart.forEach(cartItem => {\n            if (item._id === cartItem.id) {\n              return cartItem.quantity;\n            }\n          });\n        });\n      }\n\n      switch (res.status) {\n        case 200:\n          setCartData({\n            data: data.product\n          });\n          setLogged(true);\n          break;\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: logged ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: cartData.data.map(p => {\n        return /*#__PURE__*/_jsxDEV(CartCard, {\n          image: p.image,\n          title: p.name,\n          price: p.price,\n          portion: p.portion,\n          rating: p.rating,\n          deliveryPrice: p.deliveryPrice,\n          quantity: getQuantity,\n          countInStock: p.countInStock,\n          id: p._id,\n          cep: userData.cep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"You must be logged to use the cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(CartPage, \"UI9AywyakbaVfN//QCdn57eV6qs=\");\n\n_c2 = CartPage;\nexport default CartPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CartCard\");\n$RefreshReg$(_c2, \"CartPage\");","map":{"version":3,"sources":["/home/evelynn/Documents/ecommerce-project/client/src/pages/CartPage/index.js"],"names":["React","useEffect","useState","Rating","Container","CartContainer","Info","Row","StockInfo","CartCard","props","buyQuantity","setBuyQuantity","valid","setValid","undoRemove","fetch","process","env","REACT_APP_SERVER_URL","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","productId","id","quantity","then","res","status","alert","removeFromCart","Accept","data","json","image","title","price","portion","toFixed","rating","deliveryPrice","cep","countInStock","Array","from","keys","map","i","CartPage","logged","setLogged","cartData","setCartData","userData","setUserData","product","forEach","item","cart","cartItem","_id","getQuantity","p","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { Container, CartContainer, Info, Row, StockInfo } from \"./styles\";\n\nfunction CartCard(props) {\n  const [buyQuantity, setBuyQuantity] = useState(1);\n  const [valid, setValid] = useState(true);\n\n  function undoRemove() {\n    setValid(!valid);\n    fetch(`${process.env.REACT_APP_SERVER_URL}/cart/addToCart`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n      },\n      body: JSON.stringify({\n        productId: props.id,\n        quantity: props.quantity,\n      }),\n    }).then(async (res) => {\n      switch (res.status) {\n        case 200:\n          alert(\"Item adicionado novamente ao carrinho!\", res);\n          break;\n      }\n    });\n  }\n\n  function removeFromCart() {\n    setValid(!valid);\n    fetch(`${process.env.REACT_APP_SERVER_URL}/cart/removeFromCart?id=${props.id}`, {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n      },\n    }).then(async (res) => {\n      let data = await res.json();\n    });\n  }\n\n  return (\n    <CartContainer>\n      {valid ? (\n        <>\n          <Row>\n            <img src={`${process.env.REACT_APP_SERVER_URL}/files/${props.image}`}></img>\n            <Info>\n              <p>{props.title}</p>\n              <sub>\n                $ {props.price} {props.portion}x of {\"$\"}\n                {(props.price / props.portion).toFixed(2)}\n              </sub>\n              <Rating\n                name=\"half-rating\"\n                defaultValue={props.rating}\n                size=\"small\"\n                precision={0.5}\n                readOnly\n              />\n              <b>\n                $ {props.deliveryPrice} to {props.cep}\n              </b>\n            </Info>\n          </Row>\n          <StockInfo>\n            <input\n              type=\"button\"\n              value=\"Remove\"\n              onClick={() => removeFromCart()}\n            />\n            <select\n              defaultValue={\n                props.quantity < props.countInStock\n                  ? props.quantity\n                  : props.countInStock\n              }\n            >\n              {Array.from(Array(props.countInStock + 1).keys()).map((i) => {\n                return <option value={i}>{i}</option>;\n              })}\n            </select>\n            <sub>{props.countInStock} In Stock</sub>\n          </StockInfo>\n        </>\n      ) : (\n        <input onClick={() => undoRemove()} value=\"Undo\" type=\"button\" />\n      )}\n    </CartContainer>\n  );\n}\n\nfunction CartPage() {\n  const [logged, setLogged] = useState(false);\n  const [cartData, setCartData] = useState({ data: [] });\n  const [userData, setUserData] = useState({});\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_SERVER_URL}/cart/consultTheCart`, {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n      },\n    }).then(async (res) => {\n      let data = await res.json();\n\n      if (logged) {\n        data.product.forEach((item) => {\n          data.cart.forEach((cartItem) => {\n            if (item._id === cartItem.id) {\n              item.quantity = cartItem.quantity;\n            }\n          });\n        });\n      }\n\n      switch (res.status) {\n        case 200:\n          setCartData({ data: data.product });\n          setLogged(true);\n          break;\n      }\n    });\n  }, [cartData]);\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_SERVER_URL}/auth/consult`, {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n      },\n    }).then(async (res) => {\n      let data = await res.json();\n\n      switch (res.status) {\n        case 200:\n          setUserData(data);\n          break;\n      }\n    });\n  }, []);\n\n  function getQuantity() {\n    fetch(`${process.env.REACT_APP_SERVER_URL}/cart/consultTheCart`, {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n      },\n    }).then(async (res) => {\n      let data = await res.json();\n\n      if (logged) {\n        data.product.forEach((item) => {\n          data.cart.forEach((cartItem) => {\n            if (item._id === cartItem.id) {\n              return cartItem.quantity;\n            }\n          });\n        });\n      }\n\n      switch (res.status) {\n        case 200:\n          setCartData({ data: data.product });\n          setLogged(true);\n          break;\n      }\n    });\n  }\n\n  return (\n    <Container>\n      {logged ? (\n        <>\n          {cartData.data.map((p) => {\n            return (\n              <CartCard\n                image={p.image}\n                title={p.name}\n                price={p.price}\n                portion={p.portion}\n                rating={p.rating}\n                deliveryPrice={p.deliveryPrice}\n                quantity={getQuantity}\n                countInStock={p.countInStock}\n                id={p._id}\n                cep={userData.cep}\n              />\n            );\n          })}\n        </>\n      ) : (\n        <h1>You must be logged to use the cart</h1>\n      )}\n    </Container>\n  );\n}\n\nexport default CartPage;\n"]},"metadata":{},"sourceType":"module"}