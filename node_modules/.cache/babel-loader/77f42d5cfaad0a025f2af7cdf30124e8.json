{"ast":null,"code":"var _jsxFileName = \"/home/evelynn/Documents/ecommerce-project/client/src/pages/UserRegister/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { AiFillCamera } from \"../../styles/Icons\";\nimport { Container, RegisterWrapper, RegisterInput, RegisterButton, NumberInput, DropContainer, UploadMessage, ImageContainer, Preview } from \"./styles\";\nimport Dropzone from \"react-dropzone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UploadedImage(props) {\n  return /*#__PURE__*/_jsxDEV(ImageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Preview, {\n      src: props.preview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_c = UploadedImage;\n\nfunction UserRegister() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [pictureInfo, setPictureInfo] = useState({});\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [cep, setCEP] = useState(0);\n\n  function createUserAccount() {\n    const data = new FormData();\n    data.append(\"file\", pictureInfo.file);\n    data.append(\"name\", name);\n    data.append(\"email\", email);\n    data.append(\"password\", password);\n    data.append(\"cep\", cep);\n\n    if (cep != null && name != null && email != null && pictureInfo.file != null && password != null) {\n      fetch(`${process.env.REACT_APP_SERVER_URL}/auth/register`, {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\"\n        },\n        body: data\n      }).then(async res => {\n        let data = await res.json();\n\n        switch (res.status) {\n          case 200:\n            if (data.token) {\n              alert(\"conta criada com sucesso!\");\n              localStorage.setItem(\"access_token\", data.token);\n              window.location.href = \"/\";\n            }\n\n            break;\n        }\n      });\n    } else {\n      alert(\"campo faltando\");\n    }\n  }\n\n  function renderDragMessage(isDragActive, isDragReject) {\n    if (!isDragActive) {\n      return /*#__PURE__*/_jsxDEV(UploadMessage, {\n        children: \"Drag images here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (isDragReject) {\n      return /*#__PURE__*/_jsxDEV(UploadMessage, {\n        type: \"error\",\n        children: \"Invalid file type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(UploadMessage, {\n      type: \"success\",\n      children: \"Drop it here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  }\n\n  function handleUpload(file) {\n    file.map(item => {\n      setPictureInfo({\n        file: item,\n        name: item.name,\n        preview: URL.createObjectURL(item)\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(RegisterWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RegisterInput, {\n        type: \"text\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RegisterInput, {\n        type: \"email\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RegisterInput, {\n        type: \"password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your postal code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumberInput, {\n        onChange: setCEP,\n        enableMobileNumericKeyboard: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropzone, {\n        accept: \"image/*\",\n        onDropAccepted: handleUpload,\n        children: ({\n          getRootProps,\n          getInputProps,\n          isDragActive,\n          isDragReject\n        }) => /*#__PURE__*/_jsxDEV(DropContainer, { ...getRootProps(),\n          isDragActive: isDragActive,\n          isDragReject: isDragReject,\n          children: [/*#__PURE__*/_jsxDEV(AiFillCamera, {\n            size: 30,\n            color: \"gray\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), renderDragMessage(isDragActive, isDragReject)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), pictureInfo.name != null && /*#__PURE__*/_jsxDEV(UploadedImage, {\n        preview: pictureInfo.preview,\n        name: pictureInfo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RegisterButton, {\n        type: \"button\",\n        value: \"Create account\",\n        onClick: () => createUserAccount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserRegister, \"T1GQp6q+6+a+2/IhYOxF02zzLDU=\");\n\n_c2 = UserRegister;\nexport default UserRegister;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UploadedImage\");\n$RefreshReg$(_c2, \"UserRegister\");","map":{"version":3,"sources":["/home/evelynn/Documents/ecommerce-project/client/src/pages/UserRegister/index.js"],"names":["React","useState","AiFillCamera","Container","RegisterWrapper","RegisterInput","RegisterButton","NumberInput","DropContainer","UploadMessage","ImageContainer","Preview","Dropzone","UploadedImage","props","preview","name","UserRegister","setName","pictureInfo","setPictureInfo","email","setEmail","password","setPassword","cep","setCEP","createUserAccount","data","FormData","append","file","fetch","process","env","REACT_APP_SERVER_URL","method","headers","Accept","body","then","res","json","status","token","alert","localStorage","setItem","window","location","href","renderDragMessage","isDragActive","isDragReject","handleUpload","map","item","URL","createObjectURL","e","target","value","getRootProps","getInputProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { AiFillCamera } from \"../../styles/Icons\";\nimport {\n  Container,\n  RegisterWrapper,\n  RegisterInput,\n  RegisterButton,\n  NumberInput,\n  DropContainer,\n  UploadMessage,\n  ImageContainer,\n  Preview,\n} from \"./styles\";\nimport Dropzone from \"react-dropzone\";\n\nfunction UploadedImage(props) {\n  return (\n    <ImageContainer>\n      <Preview src={props.preview} />\n      <p>{props.name}</p>\n    </ImageContainer>\n  );\n}\n\nfunction UserRegister() {\n  const [name, setName] = useState(\"\");\n  const [pictureInfo, setPictureInfo] = useState({});\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [cep, setCEP] = useState(0);\n\n  function createUserAccount() {\n    const data = new FormData();\n\n    data.append(\"file\", pictureInfo.file);\n    data.append(\"name\", name);\n    data.append(\"email\", email);\n    data.append(\"password\", password);\n    data.append(\"cep\", cep);\n\n    if (\n      cep != null &&\n      name != null &&\n      email != null &&\n      pictureInfo.file != null &&\n      password != null\n    ) {\n      fetch(`${process.env.REACT_APP_SERVER_URL}/auth/register`, {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n        },\n        body: data,\n      }).then(async (res) => {\n        let data = await res.json();\n\n        switch (res.status) {\n          case 200:\n            if (data.token) {\n              alert(\"conta criada com sucesso!\");\n              localStorage.setItem(\"access_token\", data.token);\n              window.location.href = \"/\";\n            }\n            break;\n        }\n      });\n    } else {\n      alert(\"campo faltando\");\n    }\n  }\n\n  function renderDragMessage(isDragActive, isDragReject) {\n    if (!isDragActive) {\n      return <UploadMessage>Drag images here...</UploadMessage>;\n    }\n\n    if (isDragReject) {\n      return <UploadMessage type=\"error\">Invalid file type</UploadMessage>;\n    }\n\n    return <UploadMessage type=\"success\">Drop it here</UploadMessage>;\n  }\n\n  function handleUpload(file) {\n    file.map((item) => {\n      setPictureInfo({\n        file: item,\n        name: item.name,\n        preview: URL.createObjectURL(item),\n      });\n    });\n  }\n\n  return (\n    <Container>\n      <RegisterWrapper>\n        <p>Your name</p>\n        <RegisterInput type=\"text\" onChange={(e) => setName(e.target.value)} />\n        <p>Your email</p>\n        <RegisterInput type=\"email\" onChange={(e) => setEmail(e.target.value)} />\n        <p>Your password</p>\n        <RegisterInput\n          type=\"password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <p>Your postal code</p>\n        <NumberInput onChange={setCEP} enableMobileNumericKeyboard />\n        <Dropzone accept=\"image/*\" onDropAccepted={handleUpload}>\n          {({ getRootProps, getInputProps, isDragActive, isDragReject }) => (\n            <DropContainer\n              {...getRootProps()}\n              isDragActive={isDragActive}\n              isDragReject={isDragReject}\n            >\n              <AiFillCamera size={30} color=\"gray\" />\n              <input {...getInputProps()} />\n              {renderDragMessage(isDragActive, isDragReject)}\n            </DropContainer>\n          )}\n        </Dropzone>\n        {pictureInfo.name != null && (\n          <UploadedImage\n            preview={pictureInfo.preview}\n            name={pictureInfo.name}\n          ></UploadedImage>\n        )}\n        <RegisterButton\n          type=\"button\"\n          value=\"Create account\"\n          onClick={() => createUserAccount()}\n        />\n      </RegisterWrapper>\n    </Container>\n  );\n}\n\nexport default UserRegister;\n"]},"metadata":{},"sourceType":"module"}