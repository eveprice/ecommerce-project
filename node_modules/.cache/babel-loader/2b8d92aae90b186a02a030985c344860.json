{"ast":null,"code":"var _jsxFileName = \"/home/evelynn/Documents/ecommerce-project/client/src/pages/UserRegister/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, RegisterWrapper, RegisterInput, RegisterButton, DropContainer, UploadMessage, ImageContainer, Preview } from \"./styles\";\nimport Dropzone from \"react-dropzone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UploadedImage(props) {\n  return /*#__PURE__*/_jsxDEV(ImageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Preview, {\n      src: props.preview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_c = UploadedImage;\n\nfunction UserRegister() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [pictureInfo, setPictureInfo] = useState({});\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [cep, setCEP] = useState(0);\n\n  function createUserAccount() {\n    fetch(\"http://localhost:3001/auth/register\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        name: name,\n        email: email,\n        password: password,\n        cep: cep\n      })\n    }).then(async res => {\n      let data = await res.json();\n\n      switch (res.status) {\n        case 404:\n          console.log(\"Usuário não encontrado\");\n          break;\n\n        case 403:\n          console.log(\"Senha inválida\");\n          break;\n\n        case 200:\n          if (data.token) {\n            alert(\"conta criada com sucesso!\");\n            localStorage.setItem(\"access_token\", data.token);\n            window.location.href = \"/\";\n          }\n\n          break;\n      }\n    });\n  }\n\n  function renderDragMessage(isDragActive, isDragReject) {\n    if (!isDragActive) {\n      return /*#__PURE__*/_jsxDEV(UploadMessage, {\n        children: \"Drag images here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (isDragReject) {\n      return /*#__PURE__*/_jsxDEV(UploadMessage, {\n        type: \"error\",\n        children: \"Invalid file type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(UploadMessage, {\n      type: \"success\",\n      children: \"Drop it here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  }\n\n  function handleUpload(file) {\n    file.map(item => {\n      setPictureInfo({\n        name: item.name,\n        preview: URL.createObjectURL(item)\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(RegisterWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Seu nome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RegisterInput, {\n        type: \"text\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Seu email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RegisterInput, {\n        type: \"text\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Sua senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RegisterInput, {\n        type: \"password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Seu CEP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RegisterInput, {\n        type: \"text\",\n        onChange: e => setCEP(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropzone, {\n        accept: \"image/*\",\n        onDropAccepted: handleUpload,\n        children: ({\n          getRootProps,\n          getInputProps,\n          isDragActive,\n          isDragReject\n        }) => /*#__PURE__*/_jsxDEV(DropContainer, { ...getRootProps(),\n          isDragActive: isDragActive,\n          isDragReject: isDragReject,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: pictureInfo.preview,\n            width: 25\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), renderDragMessage(isDragActive, isDragReject)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UploadedImage, {\n        preview: pictureInfo.preview,\n        name: pictureInfo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RegisterButton, {\n        type: \"button\",\n        value: \"Criar conta\",\n        onClick: () => createUserAccount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserRegister, \"T1GQp6q+6+a+2/IhYOxF02zzLDU=\");\n\n_c2 = UserRegister;\nexport default UserRegister;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UploadedImage\");\n$RefreshReg$(_c2, \"UserRegister\");","map":{"version":3,"sources":["/home/evelynn/Documents/ecommerce-project/client/src/pages/UserRegister/index.js"],"names":["React","useState","Container","RegisterWrapper","RegisterInput","RegisterButton","DropContainer","UploadMessage","ImageContainer","Preview","Dropzone","UploadedImage","props","preview","name","UserRegister","setName","pictureInfo","setPictureInfo","email","setEmail","password","setPassword","cep","setCEP","createUserAccount","fetch","method","headers","Accept","body","JSON","stringify","then","res","data","json","status","console","log","token","alert","localStorage","setItem","window","location","href","renderDragMessage","isDragActive","isDragReject","handleUpload","file","map","item","URL","createObjectURL","e","target","value","getRootProps","getInputProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Container,\n  RegisterWrapper,\n  RegisterInput,\n  RegisterButton,\n  DropContainer,\n  UploadMessage,\n  ImageContainer,\n  Preview,\n} from \"./styles\";\nimport Dropzone from \"react-dropzone\";\n\nfunction UploadedImage(props) {\n  return (\n    <ImageContainer>\n      <Preview src={props.preview} />\n      <p>{props.name}</p>\n    </ImageContainer>\n  );\n}\n\nfunction UserRegister() {\n  const [name, setName] = useState(\"\");\n  const [pictureInfo, setPictureInfo] = useState({});\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [cep, setCEP] = useState(0);\n\n  function createUserAccount() {\n    fetch(\"http://localhost:3001/auth/register\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        name: name,\n        email: email,\n        password: password,\n        cep: cep,\n      }),\n    }).then(async (res) => {\n      let data = await res.json();\n\n      switch (res.status) {\n        case 404:\n          console.log(\"Usuário não encontrado\");\n          break;\n        case 403:\n          console.log(\"Senha inválida\");\n          break;\n        case 200:\n          if (data.token) {\n            alert(\"conta criada com sucesso!\");\n            localStorage.setItem(\"access_token\", data.token);\n            window.location.href = \"/\";\n          }\n          break;\n      }\n    });\n  }\n\n  function renderDragMessage(isDragActive, isDragReject) {\n    if (!isDragActive) {\n      return <UploadMessage>Drag images here...</UploadMessage>;\n    }\n\n    if (isDragReject) {\n      return <UploadMessage type=\"error\">Invalid file type</UploadMessage>;\n    }\n\n    return <UploadMessage type=\"success\">Drop it here</UploadMessage>;\n  }\n\n  function handleUpload(file) {\n    file.map((item) => {\n      setPictureInfo({ name: item.name, preview: URL.createObjectURL(item) });\n    });\n  }\n\n  return (\n    <Container>\n      <RegisterWrapper>\n        <p>Seu nome</p>\n        <RegisterInput type=\"text\" onChange={(e) => setName(e.target.value)} />\n        <p>Seu email</p>\n        <RegisterInput type=\"text\" onChange={(e) => setEmail(e.target.value)} />\n        <p>Sua senha</p>\n        <RegisterInput\n          type=\"password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <p>Seu CEP</p>\n        <RegisterInput type=\"text\" onChange={(e) => setCEP(e.target.value)} />\n        <Dropzone accept=\"image/*\" onDropAccepted={handleUpload}>\n          {({ getRootProps, getInputProps, isDragActive, isDragReject }) => (\n            <DropContainer\n              {...getRootProps()}\n              isDragActive={isDragActive}\n              isDragReject={isDragReject}\n            >\n              <input {...getInputProps()} />\n              <img src={pictureInfo.preview} width={25} />\n              {renderDragMessage(isDragActive, isDragReject)}\n            </DropContainer>\n          )}\n        </Dropzone>\n        <UploadedImage\n          preview={pictureInfo.preview}\n          name={pictureInfo.name}\n        ></UploadedImage>\n        <RegisterButton\n          type=\"button\"\n          value=\"Criar conta\"\n          onClick={() => createUserAccount()}\n        />\n      </RegisterWrapper>\n    </Container>\n  );\n}\n\nexport default UserRegister;\n"]},"metadata":{},"sourceType":"module"}