{"ast":null,"code":"var _jsxFileName = \"/home/eveprice/Documentos/React/ecommerce/client/src/pages/CartPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Container } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CartPage() {\n  _s();\n\n  const [cartData, setCartData] = useState({\n    ProductData: [],\n    CartData: []\n  });\n  useEffect(() => {\n    fetch(\"http://localhost:3000/cart/consultTheCart\", {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`\n      }\n    }).then(async res => {\n      let data = await res.json();\n\n      switch (res.status) {\n        case 200:\n          setCartData({\n            ProductData: data.product,\n            CartData: data.cart\n          });\n          break;\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: cartData.ProductData.map(p => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: cartData.CartData.map(c => {\n          /*#__PURE__*/\n          _jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [p.name, \" = \", c.quantity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartPage, \"MhoYY+cK6lBbXNx4hCcUl38m6ak=\");\n\n_c = CartPage;\nexport default CartPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartPage\");","map":{"version":3,"sources":["/home/eveprice/Documentos/React/ecommerce/client/src/pages/CartPage/index.js"],"names":["React","useEffect","useState","Container","CartPage","cartData","setCartData","ProductData","CartData","fetch","method","headers","Accept","Authorization","localStorage","getItem","then","res","data","json","status","product","cart","map","p","c","name","quantity"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,SAAT,QAA0B,UAA1B;;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC;AAAEK,IAAAA,WAAW,EAAE,EAAf;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GAAD,CAAxC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAAC,2CAAD,EAA8C;AACjDC,MAAAA,MAAM,EAAE,KADyC;AAEjDC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE,kBAFD;AAGPC,QAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAqC;AAHvD;AAFwC,KAA9C,CAAL,CAOGC,IAPH,CAOQ,MAAOC,GAAP,IAAe;AACrB,UAAIC,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAjB;;AAEA,cAAQF,GAAG,CAACG,MAAZ;AACE,aAAK,GAAL;AACEd,UAAAA,WAAW,CAAC;AAAEC,YAAAA,WAAW,EAAEW,IAAI,CAACG,OAApB;AAA6Bb,YAAAA,QAAQ,EAAEU,IAAI,CAACI;AAA5C,WAAD,CAAX;AACA;AAHJ;AAKD,KAfD;AAgBD,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,sBACE,QAAC,SAAD;AAAA,cACGjB,QAAQ,CAACE,WAAT,CAAqBgB,GAArB,CAA0BC,CAAD,IAAO;AAC/B,0BACE;AAAA,kBACGnB,QAAQ,CAACG,QAAT,CAAkBe,GAAlB,CAAuBE,CAAD,IAAO;AAC5B;AAAA;AAAA,mCACE;AAAA,yBAAKD,CAAC,CAACE,IAAP,SAAgBD,CAAC,CAACE,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAGD,SAJA;AADH,uBADF;AASD,KAVA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GArCQvB,Q;;KAAAA,Q;AAuCT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { Container } from \"./styles\";\n\nfunction CartPage() {\n  const [cartData, setCartData] = useState({ ProductData: [], CartData: [] });\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/cart/consultTheCart\", {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n      },\n    }).then(async (res) => {\n      let data = await res.json();\n\n      switch (res.status) {\n        case 200:\n          setCartData({ ProductData: data.product, CartData: data.cart });\n          break;\n      }\n    });\n  }, []);\n\n  return (\n    <Container>\n      {cartData.ProductData.map((p) => {\n        return (\n          <>\n            {cartData.CartData.map((c) => {\n              <>\n                <h1>{p.name} = {c.quantity}</h1>\n              </>;\n            })}\n          </>\n        );\n      })}\n    </Container>\n  );\n}\n\nexport default CartPage;\n"]},"metadata":{},"sourceType":"module"}