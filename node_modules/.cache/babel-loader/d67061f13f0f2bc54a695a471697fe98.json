{"ast":null,"code":"var _jsxFileName = \"/home/eveprice/Documentos/React/ecommerce/client/src/pages/CartPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Container } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CartPage() {\n  _s();\n\n  const [cartData, setCartData] = useState({\n    data: []\n  });\n  useEffect(() => {\n    fetch(\"http://localhost:3000/cart/consultTheCart\", {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`\n      }\n    }).then(async res => {\n      let data = await res.json();\n      data.product.forEach(item => {\n        data.cart.forEach(cartItem => {\n          if (item._id === cartItem.id) {\n            item.quantity = cartItem.quantity;\n          }\n        });\n      });\n\n      switch (res.status) {\n        case 200:\n          setCartData({\n            data: data.product\n          });\n          break;\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: cartData.data.map(p => {\n      /*#__PURE__*/\n      _jsxDEV(\"p\", {\n        children: [p.name, \" === \", p.quantity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartPage, \"JQ27uyv7VvuQOC2+Jkxmd9XZC3E=\");\n\n_c = CartPage;\nexport default CartPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartPage\");","map":{"version":3,"sources":["/home/eveprice/Documentos/React/ecommerce/client/src/pages/CartPage/index.js"],"names":["React","useEffect","useState","Container","CartPage","cartData","setCartData","data","fetch","method","headers","Accept","Authorization","localStorage","getItem","then","res","json","product","forEach","item","cart","cartItem","_id","id","quantity","status","map","p","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,SAAT,QAA0B,UAA1B;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAxC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAAC,2CAAD,EAA8C;AACjDC,MAAAA,MAAM,EAAE,KADyC;AAEjDC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE,kBAFD;AAGPC,QAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAqC;AAHvD;AAFwC,KAA9C,CAAL,CAOGC,IAPH,CAOQ,MAAOC,GAAP,IAAe;AACrB,UAAIT,IAAI,GAAG,MAAMS,GAAG,CAACC,IAAJ,EAAjB;AAEAV,MAAAA,IAAI,CAACW,OAAL,CAAaC,OAAb,CAAsBC,IAAD,IAAU;AAC7Bb,QAAAA,IAAI,CAACc,IAAL,CAAUF,OAAV,CAAmBG,QAAD,IAAc;AAC9B,cAAIF,IAAI,CAACG,GAAL,KAAaD,QAAQ,CAACE,EAA1B,EAA8B;AAC5BJ,YAAAA,IAAI,CAACK,QAAL,GAAgBH,QAAQ,CAACG,QAAzB;AACD;AACF,SAJD;AAKD,OAND;;AAQA,cAAQT,GAAG,CAACU,MAAZ;AACE,aAAK,GAAL;AACEpB,UAAAA,WAAW,CAAC;AAAEC,YAAAA,IAAI,EAAEA,IAAI,CAACW;AAAb,WAAD,CAAX;AACA;AAHJ;AAKD,KAvBD;AAwBD,GAzBQ,EAyBN,EAzBM,CAAT;AA2BA,sBACE,QAAC,SAAD;AAAA,cACGb,QAAQ,CAACE,IAAT,CAAcoB,GAAd,CAAmBC,CAAD,IAAO;AACxB;AAAA;AAAA,mBAAIA,CAAC,CAACC,IAAN,WAAiBD,CAAC,CAACH,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,KAFA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GArCQrB,Q;;KAAAA,Q;AAuCT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { Container } from \"./styles\";\n\nfunction CartPage() {\n  const [cartData, setCartData] = useState({ data: [] });\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/cart/consultTheCart\", {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n      },\n    }).then(async (res) => {\n      let data = await res.json();\n\n      data.product.forEach((item) => {\n        data.cart.forEach((cartItem) => {\n          if (item._id === cartItem.id) {\n            item.quantity = cartItem.quantity;\n          }\n        });\n      });\n\n      switch (res.status) {\n        case 200:\n          setCartData({ data: data.product });\n          break;\n      }\n    });\n  }, []);\n\n  return (\n    <Container>\n      {cartData.data.map((p) => {\n        <p>{p.name} === {p.quantity}</p>\n      })}\n    </Container>\n  );\n}\n\nexport default CartPage;\n"]},"metadata":{},"sourceType":"module"}